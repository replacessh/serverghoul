{"version":3,"file":"static/js/619.628edbc4.chunk.js","mappings":"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","sources":["api/config.ts","pages/AdminPage.tsx"],"sourcesContent":["// Базовый URL API\r\nexport const API_BASE_URL = 'http://localhost:3001';\r\n\r\n// Типы для API ответов\r\nexport interface ApiResponse<T> {\r\n  data: T;\r\n  message?: string;\r\n  status: number;\r\n}\r\n\r\nexport interface ErrorResponse {\r\n  message: string;\r\n  statusCode: number;\r\n  error?: string;\r\n}\r\n\r\n// Конфигурация эндпоинтов\r\nexport const API_ENDPOINTS = {\r\n  auth: {\r\n    login: `${API_BASE_URL}/api/auth/login`,\r\n    register: `${API_BASE_URL}/api/auth/register`,\r\n    refresh: `${API_BASE_URL}/api/auth/refresh`,\r\n    logout: `${API_BASE_URL}/api/auth/logout`,\r\n  },\r\n  products: {\r\n    list: `${API_BASE_URL}/api/products`,\r\n    detail: (id: string) => `${API_BASE_URL}/api/products/${id}`,\r\n    create: `${API_BASE_URL}/api/products`,\r\n    update: (id: string) => `${API_BASE_URL}/api/products/${id}`,\r\n    delete: (id: string) => `${API_BASE_URL}/api/products/${id}`,\r\n  },\r\n  support: {\r\n    list: `${API_BASE_URL}/api/support`,\r\n    detail: (id: string) => `${API_BASE_URL}/api/support/${id}`,\r\n    create: `${API_BASE_URL}/api/support`,\r\n    update: (id: string) => `${API_BASE_URL}/api/support/${id}`,\r\n  },\r\n  profile: {\r\n    get: `${API_BASE_URL}/api/profile`,\r\n    update: `${API_BASE_URL}/api/profile`,\r\n    changePassword: `${API_BASE_URL}/api/profile/password`,\r\n  },\r\n  admin: {\r\n    users: {\r\n      list: `${API_BASE_URL}/api/admin/users`,\r\n      detail: (id: string) => `${API_BASE_URL}/api/admin/users/${id}`,\r\n      block: (id: string) => `${API_BASE_URL}/api/admin/users/${id}/block`,\r\n      unblock: (id: string) => `${API_BASE_URL}/api/admin/users/${id}/unblock`,\r\n    },\r\n    products: {\r\n      list: `${API_BASE_URL}/api/admin/products`,\r\n      create: `${API_BASE_URL}/api/admin/products`,\r\n      update: (id: string) => `${API_BASE_URL}/api/admin/products/${id}`,\r\n      delete: (id: string) => `${API_BASE_URL}/api/admin/products/${id}`,\r\n    },\r\n  },\r\n} as const;\r\n\r\n// HTTP методы\r\nexport const HTTP_METHODS = {\r\n  GET: 'GET',\r\n  POST: 'POST',\r\n  PUT: 'PUT',\r\n  PATCH: 'PATCH',\r\n  DELETE: 'DELETE',\r\n} as const;\r\n\r\n// HTTP статусы\r\nexport const HTTP_STATUS = {\r\n  OK: 200,\r\n  CREATED: 201,\r\n  BAD_REQUEST: 400,\r\n  UNAUTHORIZED: 401,\r\n  FORBIDDEN: 403,\r\n  NOT_FOUND: 404,\r\n  INTERNAL_SERVER_ERROR: 500,\r\n} as const; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Grid,\r\n  Tabs,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  useTheme,\r\n  alpha,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Alert,\r\n  Chip,\r\n  MenuItem,\r\n  Select\r\n} from '@mui/material';\r\nimport {\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  Block as BlockIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Add as AddIcon,\r\n  ShoppingCart as ShoppingCartIcon,\r\n  People as PeopleIcon,\r\n  Star as StarIcon,\r\n  Support as SupportIcon,\r\n  LockOpen as LockOpenIcon\r\n} from '@mui/icons-material';\r\nimport { useSnackbar } from 'notistack';\r\nimport api from '../api/axios';\r\nimport { API_ENDPOINTS } from '../api/config';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`admin-tabpanel-${index}`}\r\n      aria-labelledby={`admin-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  role: string;\r\n  isBlocked: boolean;\r\n  createdAt: string;\r\n}\r\n\r\ninterface Product {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  category: string;\r\n  stock: number;\r\n  imageUrl: string;\r\n  sizes: string[];\r\n  createdAt: string;\r\n}\r\n\r\ninterface SupportTicket {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  status: string;\r\n  createdAt: string;\r\n  user: {\r\n    id: string;\r\n    name: string;\r\n    email: string;\r\n  };\r\n}\r\n\r\nconst PRODUCTS_STORAGE_KEY = 'admin_products';\r\n\r\nconst DEFAULT_PRODUCTS: Product[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Футболка Classic',\r\n    description: 'Классическая хлопковая футболка',\r\n    price: 1999,\r\n    category: 'одежда',\r\n    stock: 10,\r\n    imageUrl: 'https://example.com/tshirt.jpg',\r\n    sizes: ['S', 'M', 'L', 'XL'],\r\n    createdAt: new Date().toISOString()\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Джинсы Slim Fit',\r\n    description: 'Современные джинсы прямого кроя',\r\n    price: 3999,\r\n    category: 'одежда',\r\n    stock: 15,\r\n    imageUrl: 'https://example.com/jeans.jpg',\r\n    sizes: ['M', 'L', 'XL'],\r\n    createdAt: new Date().toISOString()\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Кроссовки Sport',\r\n    description: 'Удобные спортивные кроссовки',\r\n    price: 5999,\r\n    category: 'обувь',\r\n    stock: 8,\r\n    imageUrl: 'https://example.com/sneakers.jpg',\r\n    sizes: ['40', '41', '42', '43'],\r\n    createdAt: new Date().toISOString()\r\n  }\r\n];\r\n\r\nconst AdminPage: React.FC = () => {\r\n  const theme = useTheme();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [tickets, setTickets] = useState<SupportTicket[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [openProductDialog, setOpenProductDialog] = useState(false);\r\n  const [newProduct, setNewProduct] = useState<Partial<Product>>({\r\n    name: '',\r\n    description: '',\r\n    price: 0,\r\n    category: '',\r\n    stock: 0,\r\n    imageUrl: '',\r\n    sizes: []\r\n  });\r\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\r\n  const [roleDialogOpen, setRoleDialogOpen] = useState(false);\r\n\r\n  const clothingSizes = ['XS', 'S', 'M', 'L', 'XL', 'XXL'];\r\n  const shoeSizes = ['36', '37', '38', '39', '40', '41', '42', '43', '44', '45'];\r\n\r\n  // Загрузка данных\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Сначала проверяем localStorage\r\n        const savedProducts = localStorage.getItem(PRODUCTS_STORAGE_KEY);\r\n        if (savedProducts) {\r\n          try {\r\n            const parsedProducts = JSON.parse(savedProducts);\r\n            setProducts(parsedProducts);\r\n          } catch (err) {\r\n            console.error('Error loading products from localStorage:', err);\r\n          }\r\n        } else {\r\n          // Если в localStorage нет товаров, используем тестовые\r\n          setProducts(DEFAULT_PRODUCTS);\r\n          localStorage.setItem(PRODUCTS_STORAGE_KEY, JSON.stringify(DEFAULT_PRODUCTS));\r\n        }\r\n\r\n        // Затем загружаем остальные данные с сервера\r\n        const [usersRes, ticketsRes] = await Promise.all([\r\n          api.get(API_ENDPOINTS.admin.users.list),\r\n          api.get('/admin/support/tickets')\r\n        ]);\r\n\r\n        console.log('Users response:', usersRes.data);\r\n        console.log('Tickets response:', ticketsRes.data);\r\n\r\n        setUsers(usersRes.data);\r\n        setTickets(ticketsRes.data);\r\n        setError(null);\r\n      } catch (err: any) {\r\n        console.error('Error fetching data:', err);\r\n        const errorMessage = err.response?.data?.message || err.message || 'Ошибка при загрузке данных';\r\n        setError(errorMessage);\r\n        enqueueSnackbar(errorMessage, { variant: 'error' });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Сохранение товаров в localStorage при изменении\r\n  useEffect(() => {\r\n    if (products.length > 0) {\r\n      localStorage.setItem(PRODUCTS_STORAGE_KEY, JSON.stringify(products));\r\n    }\r\n  }, [products]);\r\n\r\n  // Обработчики событий\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const handleBlockUser = async (userId: string) => {\r\n    try {\r\n      await api.post(`/users/ban/${userId}`, { reason: 'Нарушение правил' });\r\n      setUsers(users.map(user => \r\n        user.id === userId ? { ...user, isBlocked: true } : user\r\n      ));\r\n      enqueueSnackbar('Пользователь заблокирован', { variant: 'success' });\r\n    } catch (err) {\r\n      console.error('Error blocking user:', err);\r\n      enqueueSnackbar('Ошибка при блокировке пользователя', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleUnblockUser = async (userId: string) => {\r\n    try {\r\n      await api.post(`/users/unban/${userId}`);\r\n      setUsers(users.map(user => \r\n        user.id === userId ? { ...user, isBlocked: false } : user\r\n      ));\r\n      enqueueSnackbar('Пользователь разблокирован', { variant: 'success' });\r\n    } catch (err) {\r\n      console.error('Error unblocking user:', err);\r\n      enqueueSnackbar('Ошибка при разблокировке пользователя', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleDeleteProduct = (productId: string) => {\r\n    setProducts(prev => prev.filter(p => p.id !== productId));\r\n    enqueueSnackbar('Товар успешно удален', { variant: 'success' });\r\n  };\r\n\r\n  const handleAddProduct = () => {\r\n    if (!newProduct.name || !newProduct.description || !newProduct.price || !newProduct.category || !newProduct.imageUrl) {\r\n      enqueueSnackbar('Заполните все обязательные поля', { variant: 'error' });\r\n      return;\r\n    }\r\n\r\n    const product: Product = {\r\n      id: crypto.randomUUID(),\r\n      name: newProduct.name,\r\n      description: newProduct.description,\r\n      price: newProduct.price,\r\n      category: newProduct.category,\r\n      stock: newProduct.stock || 0,\r\n      imageUrl: newProduct.imageUrl,\r\n      sizes: newProduct.sizes || [],\r\n      createdAt: new Date().toISOString()\r\n    };\r\n\r\n    setProducts(prev => [...prev, product]);\r\n    setNewProduct({\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n      category: '',\r\n      stock: 0,\r\n      imageUrl: '',\r\n      sizes: []\r\n    });\r\n    setOpenProductDialog(false);\r\n    enqueueSnackbar('Товар успешно добавлен', { variant: 'success' });\r\n  };\r\n\r\n  const handleUpdateProduct = (updatedProduct: Product) => {\r\n    setProducts(prev => prev.map(p => p.id === updatedProduct.id ? updatedProduct : p));\r\n    enqueueSnackbar('Товар успешно обновлен', { variant: 'success' });\r\n  };\r\n\r\n  const handleRoleChange = async (userId: string, newRole: string) => {\r\n    try {\r\n      if (newRole === 'ADMIN') {\r\n        await api.post(`/users/make-admin/${userId}`);\r\n      } else {\r\n        await api.post(`/users/make-user/${userId}`);\r\n      }\r\n      setUsers(users.map(user => \r\n        user.id === userId ? { ...user, role: newRole } : user\r\n      ));\r\n      enqueueSnackbar('Роль пользователя обновлена', { variant: 'success' });\r\n    } catch (err) {\r\n      console.error('Error updating user role:', err);\r\n      enqueueSnackbar('Ошибка при обновлении роли пользователя', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleTicketStatusChange = async (ticketId: string, newStatus: string) => {\r\n    try {\r\n      console.log('Updating ticket status:', { ticketId, newStatus });\r\n\r\n      // Проверяем подключение к серверу\r\n      try {\r\n        const healthCheck = await api.get('/health');\r\n        console.log('Server health check:', healthCheck.status);\r\n      } catch (err) {\r\n        console.error('Server health check failed:', err);\r\n        throw new Error('Сервер недоступен. Проверьте подключение к интернету.');\r\n      }\r\n\r\n      // Формируем данные для запроса\r\n      const requestData = {\r\n        status: newStatus\r\n      };\r\n      console.log('Request data:', requestData);\r\n\r\n      // Выполняем запрос с подробным логированием\r\n      const response = await api.patch(`/admin/support/tickets/${ticketId}/status`, requestData, {\r\n        timeout: 10000, // Увеличиваем таймаут до 10 секунд\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}` // Явно добавляем токен\r\n        }\r\n      });\r\n\r\n      console.log('Response status:', response.status);\r\n      console.log('Response data:', response.data);\r\n\r\n      if (response.status === 200) {\r\n        setTickets(tickets.map(ticket => \r\n          ticket.id === ticketId ? { ...ticket, status: newStatus } : ticket\r\n        ));\r\n        enqueueSnackbar('Статус тикета обновлен', { \r\n          variant: 'success',\r\n          autoHideDuration: 3000\r\n        });\r\n      } else {\r\n        console.error('Unexpected response status:', response.status);\r\n        throw new Error('Не удалось обновить статус тикета');\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Detailed error updating ticket status:', {\r\n        error: err,\r\n        response: err.response,\r\n        request: err.request,\r\n        message: err.message\r\n      });\r\n      \r\n      let errorMessage = 'Ошибка при обновлении статуса тикета';\r\n      \r\n      if (err.message === 'Network Error') {\r\n        errorMessage = 'Ошибка сети. Проверьте подключение к интернету.';\r\n      } else if (err.response) {\r\n        // Обрабатываем различные коды ошибок\r\n        switch (err.response.status) {\r\n          case 400:\r\n            errorMessage = err.response.data?.message || 'Некорректные данные';\r\n            break;\r\n          case 401:\r\n            errorMessage = 'Ошибка авторизации. Пожалуйста, войдите снова.';\r\n            break;\r\n          case 403:\r\n            errorMessage = 'У вас нет прав для выполнения этого действия';\r\n            break;\r\n          case 404:\r\n            errorMessage = 'Тикет не найден';\r\n            break;\r\n          case 500:\r\n            errorMessage = 'Ошибка сервера. Попробуйте позже.';\r\n            break;\r\n          default:\r\n            errorMessage = err.response.data?.message || err.message;\r\n        }\r\n      } else if (err.request) {\r\n        errorMessage = 'Сервер не отвечает. Проверьте подключение к серверу.';\r\n      }\r\n      \r\n      enqueueSnackbar(errorMessage, { \r\n        variant: 'error',\r\n        autoHideDuration: 5000,\r\n        anchorOrigin: {\r\n          vertical: 'top',\r\n          horizontal: 'center'\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteTicket = async (ticketId: string) => {\r\n    try {\r\n      await api.delete(`/admin/support/tickets/${ticketId}`);\r\n      setTickets(tickets.filter(ticket => ticket.id !== ticketId));\r\n      enqueueSnackbar('Тикет удален', { variant: 'success' });\r\n    } catch (err) {\r\n      console.error('Error deleting ticket:', err);\r\n      enqueueSnackbar('Ошибка при удалении тикета', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '60vh' }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container maxWidth=\"lg\" sx={{ mt: 4 }}>\r\n        <Alert severity=\"error\">{error}</Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ height: '100%' }}>\r\n      <Paper \r\n        elevation={0}\r\n        sx={{ \r\n          p: 4, \r\n          mb: 4,\r\n          borderRadius: 3,\r\n          backgroundColor: alpha(theme.palette.background.paper, 0.8),\r\n          backdropFilter: 'blur(10px)',\r\n          boxShadow: `0 4px 20px ${alpha(theme.palette.primary.main, 0.1)}`,\r\n        }}\r\n      >\r\n        <Typography \r\n          variant=\"h4\" \r\n          component=\"h1\" \r\n          gutterBottom \r\n          sx={{ \r\n            fontWeight: 700,\r\n            color: 'primary.main',\r\n            mb: 4,\r\n            position: 'relative',\r\n            '&::after': {\r\n              content: '\"\"',\r\n              position: 'absolute',\r\n              bottom: -16,\r\n              left: 0,\r\n              width: 60,\r\n              height: 4,\r\n              backgroundColor: 'secondary.main',\r\n              borderRadius: 2\r\n            }\r\n          }}\r\n        >\r\n          Панель администратора\r\n        </Typography>\r\n\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 4 }}>\r\n          <Tabs \r\n            value={tabValue} \r\n            onChange={handleTabChange} \r\n            aria-label=\"admin tabs\"\r\n            sx={{\r\n              '& .MuiTabs-indicator': {\r\n                backgroundColor: 'secondary.main',\r\n                height: 3\r\n              }\r\n            }}\r\n          >\r\n            <Tab \r\n              icon={<PeopleIcon />} \r\n              label=\"Пользователи\" \r\n              sx={{ \r\n                textTransform: 'none',\r\n                fontWeight: 600,\r\n                fontSize: '1.1rem',\r\n                minHeight: 64\r\n              }}\r\n            />\r\n            <Tab \r\n              icon={<ShoppingCartIcon />} \r\n              label=\"Товары\" \r\n              sx={{ \r\n                textTransform: 'none',\r\n                fontWeight: 600,\r\n                fontSize: '1.1rem',\r\n                minHeight: 64\r\n              }}\r\n            />\r\n            <Tab \r\n              icon={<SupportIcon />} \r\n              label=\"Поддержка\" \r\n              sx={{ \r\n                textTransform: 'none',\r\n                fontWeight: 600,\r\n                fontSize: '1.1rem',\r\n                minHeight: 64\r\n              }}\r\n            />\r\n          </Tabs>\r\n        </Box>\r\n\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Paper \r\n            elevation={0}\r\n            sx={{ \r\n              p: 3,\r\n              borderRadius: 3,\r\n              backgroundColor: alpha(theme.palette.background.paper, 0.8),\r\n              backdropFilter: 'blur(10px)',\r\n            }}\r\n          >\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Имя</TableCell>\r\n                    <TableCell>Email</TableCell>\r\n                    <TableCell>Телефон</TableCell>\r\n                    <TableCell>Роль</TableCell>\r\n                    <TableCell>Статус</TableCell>\r\n                    <TableCell>Действия</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {[...users]\r\n                    .sort((a, b) => {\r\n                      if (a.role === 'ADMIN' && b.role !== 'ADMIN') return -1;\r\n                      if (a.role !== 'ADMIN' && b.role === 'ADMIN') return 1;\r\n                      return 0;\r\n                    })\r\n                    .map((user) => (\r\n                      <TableRow key={user.id}>\r\n                        <TableCell>{user.name}</TableCell>\r\n                        <TableCell>{user.email}</TableCell>\r\n                        <TableCell>{user.phone}</TableCell>\r\n                        <TableCell>\r\n                          <Select\r\n                            value={user.role}\r\n                            onChange={(e) => handleRoleChange(user.id, e.target.value)}\r\n                            size=\"small\"\r\n                          >\r\n                            <MenuItem value=\"USER\">Пользователь</MenuItem>\r\n                            <MenuItem value=\"ADMIN\">Администратор</MenuItem>\r\n                          </Select>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Chip\r\n                            label={user.isBlocked ? 'Заблокирован' : 'Активен'}\r\n                            color={user.isBlocked ? 'error' : 'success'}\r\n                            size=\"small\"\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {user.isBlocked ? (\r\n                            <IconButton\r\n                              onClick={() => handleUnblockUser(user.id)}\r\n                              color=\"success\"\r\n                            >\r\n                              <LockOpenIcon />\r\n                            </IconButton>\r\n                          ) : (\r\n                            <IconButton\r\n                              onClick={() => handleBlockUser(user.id)}\r\n                              color=\"error\"\r\n                            >\r\n                              <BlockIcon />\r\n                            </IconButton>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Paper \r\n            elevation={0}\r\n            sx={{ \r\n              p: 3,\r\n              borderRadius: 3,\r\n              backgroundColor: alpha(theme.palette.background.paper, 0.8),\r\n              backdropFilter: 'blur(10px)',\r\n            }}\r\n          >\r\n            <Box sx={{ mb: 4 }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<AddIcon />}\r\n                onClick={() => setOpenProductDialog(true)}\r\n                sx={{\r\n                  backgroundColor: theme.palette.primary.main,\r\n                  '&:hover': {\r\n                    backgroundColor: theme.palette.primary.dark,\r\n                  },\r\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n                  borderRadius: '8px',\r\n                  padding: '10px 24px',\r\n                  textTransform: 'none',\r\n                  fontSize: '1rem',\r\n                  fontWeight: 500,\r\n                }}\r\n              >\r\n                Добавить товар\r\n              </Button>\r\n            </Box>\r\n\r\n            <Grid container spacing={3}>\r\n              {products.map((product) => (\r\n                <Grid item xs={12} sm={6} md={4} key={product.id}>\r\n                  <Card \r\n                    sx={{ \r\n                      height: '100%',\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      transition: 'transform 0.2s, box-shadow 0.2s',\r\n                      '&:hover': {\r\n                        transform: 'translateY(-4px)',\r\n                        boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\r\n                      },\r\n                      borderRadius: '12px',\r\n                      overflow: 'hidden',\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      sx={{\r\n                        position: 'relative',\r\n                        paddingTop: '75%', // 4:3 aspect ratio\r\n                        backgroundColor: theme.palette.grey[100],\r\n                      }}\r\n                    >\r\n                      {product.imageUrl ? (\r\n                        <Box\r\n                          component=\"img\"\r\n                          src={product.imageUrl}\r\n                          alt={product.name}\r\n                          sx={{\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            objectFit: 'cover',\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <Box\r\n                          sx={{\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            backgroundColor: theme.palette.grey[200],\r\n                          }}\r\n                        >\r\n                          <ShoppingCartIcon sx={{ fontSize: 48, color: theme.palette.grey[400] }} />\r\n                        </Box>\r\n                      )}\r\n                    </Box>\r\n                    <CardContent sx={{ flexGrow: 1, p: 3 }}>\r\n                      <Typography \r\n                        variant=\"h6\" \r\n                        gutterBottom \r\n                        sx={{ \r\n                          fontWeight: 600,\r\n                          color: theme.palette.text.primary,\r\n                          mb: 1,\r\n                        }}\r\n                      >\r\n                        {product.name}\r\n                      </Typography>\r\n                      <Chip\r\n                        label={product.category}\r\n                        size=\"small\"\r\n                        sx={{\r\n                          backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                          color: theme.palette.primary.main,\r\n                          mb: 2,\r\n                        }}\r\n                      />\r\n                      <Typography \r\n                        variant=\"h6\" \r\n                        color=\"primary\" \r\n                        sx={{ \r\n                          fontWeight: 700,\r\n                          mb: 1,\r\n                        }}\r\n                      >\r\n                        {product.price.toLocaleString('ru-RU')} ₽\r\n                      </Typography>\r\n                      <Box sx={{ mb: 2 }}>\r\n                        <Typography \r\n                          variant=\"body2\" \r\n                          color=\"text.secondary\"\r\n                          sx={{ display: 'flex', alignItems: 'center', gap: 1 }}\r\n                        >\r\n                          <CheckCircleIcon sx={{ fontSize: 16, color: product.stock > 0 ? 'success.main' : 'error.main' }} />\r\n                          {product.stock > 0 ? `В наличии: ${product.stock} шт.` : 'Нет в наличии'}\r\n                        </Typography>\r\n                      </Box>\r\n                      {product.sizes && product.sizes.length > 0 && (\r\n                        <Box sx={{ mb: 2 }}>\r\n                          <Typography \r\n                            variant=\"body2\" \r\n                            color=\"text.secondary\"\r\n                            sx={{ mb: 1 }}\r\n                          >\r\n                            Доступные размеры:\r\n                          </Typography>\r\n                          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                            {product.sizes.map((size) => (\r\n                              <Chip\r\n                                key={size}\r\n                                label={size}\r\n                                size=\"small\"\r\n                                sx={{\r\n                                  backgroundColor: alpha(theme.palette.secondary.main, 0.1),\r\n                                  color: theme.palette.secondary.main,\r\n                                }}\r\n                              />\r\n                            ))}\r\n                          </Box>\r\n                        </Box>\r\n                      )}\r\n                      <Box sx={{ mt: 'auto', display: 'flex', justifyContent: 'flex-end' }}>\r\n                        <IconButton\r\n                          color=\"error\"\r\n                          onClick={() => handleDeleteProduct(product.id)}\r\n                          sx={{\r\n                            backgroundColor: alpha(theme.palette.error.main, 0.1),\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.error.main, 0.2),\r\n                            },\r\n                          }}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </Box>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Paper>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabValue} index={2}>\r\n          <Paper \r\n            elevation={0}\r\n            sx={{ \r\n              p: 3,\r\n              borderRadius: 3,\r\n              backgroundColor: alpha(theme.palette.background.paper, 0.8),\r\n              backdropFilter: 'blur(10px)',\r\n            }}\r\n          >\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Тема</TableCell>\r\n                    <TableCell>Пользователь</TableCell>\r\n                    <TableCell>Статус</TableCell>\r\n                    <TableCell>Дата</TableCell>\r\n                    <TableCell>Действия</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {tickets.map((ticket) => (\r\n                    <TableRow key={ticket.id}>\r\n                      <TableCell>{ticket.title}</TableCell>\r\n                      <TableCell>{ticket.user.name}</TableCell>\r\n                      <TableCell>\r\n                        <Select\r\n                          value={ticket.status}\r\n                          onChange={(e) => handleTicketStatusChange(ticket.id, e.target.value)}\r\n                          size=\"small\"\r\n                        >\r\n                          <MenuItem value=\"pending\">Ожидает</MenuItem>\r\n                          <MenuItem value=\"in_progress\">В работе</MenuItem>\r\n                          <MenuItem value=\"resolved\">Решено</MenuItem>\r\n                          <MenuItem value=\"closed\">Закрыто</MenuItem>\r\n                        </Select>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {new Date(ticket.createdAt).toLocaleDateString('ru-RU')}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <IconButton\r\n                          color=\"error\"\r\n                          onClick={() => handleDeleteTicket(ticket.id)}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </TabPanel>\r\n      </Paper>\r\n\r\n      <Dialog \r\n        open={openProductDialog} \r\n        onClose={() => setOpenProductDialog(false)}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: '12px',\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ \r\n          borderBottom: `1px solid ${theme.palette.divider}`,\r\n          pb: 2,\r\n        }}>\r\n          Добавить новый товар\r\n        </DialogTitle>\r\n        <DialogContent sx={{ pt: 3 }}>\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\r\n            <TextField\r\n              label=\"Название\"\r\n              value={newProduct.name}\r\n              onChange={(e) => setNewProduct({ ...newProduct, name: e.target.value })}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  borderRadius: '8px',\r\n                }\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Описание\"\r\n              value={newProduct.description}\r\n              onChange={(e) => setNewProduct({ ...newProduct, description: e.target.value })}\r\n              multiline\r\n              rows={4}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  borderRadius: '8px',\r\n                }\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Цена\"\r\n              type=\"number\"\r\n              value={newProduct.price}\r\n              onChange={(e) => setNewProduct({ ...newProduct, price: Number(e.target.value) })}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                endAdornment: <Typography sx={{ color: 'text.secondary' }}>₽</Typography>,\r\n              }}\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  borderRadius: '8px',\r\n                }\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Категория\"\r\n              value={newProduct.category}\r\n              onChange={(e) => setNewProduct({ ...newProduct, category: e.target.value })}\r\n              fullWidth\r\n              select\r\n              variant=\"outlined\"\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  borderRadius: '8px',\r\n                }\r\n              }}\r\n            >\r\n              <MenuItem value=\"одежда\">Одежда</MenuItem>\r\n              <MenuItem value=\"обувь\">Обувь</MenuItem>\r\n            </TextField>\r\n            {newProduct.category && (\r\n              <Box>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Выберите размеры\r\n                </Typography>\r\n                <Box sx={{ \r\n                  display: 'flex', \r\n                  flexWrap: 'wrap', \r\n                  gap: 1,\r\n                }}>\r\n                  {(newProduct.category === 'одежда' ? clothingSizes : shoeSizes).map((size) => (\r\n                    <Chip\r\n                      key={size}\r\n                      label={size}\r\n                      onClick={() => setNewProduct(prev => ({ ...prev, sizes: [...(prev.sizes || []), size] }))}\r\n                      color={newProduct.sizes?.includes(size) ? 'primary' : 'default'}\r\n                      variant={newProduct.sizes?.includes(size) ? 'filled' : 'outlined'}\r\n                      sx={{\r\n                        cursor: 'pointer',\r\n                        transition: 'all 0.2s ease-in-out',\r\n                        '&:hover': {\r\n                          transform: 'translateY(-2px)',\r\n                          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n                        }\r\n                      }}\r\n                    />\r\n                  ))}\r\n                </Box>\r\n              </Box>\r\n            )}\r\n            <TextField\r\n              label=\"Количество\"\r\n              type=\"number\"\r\n              value={newProduct.stock}\r\n              onChange={(e) => setNewProduct({ ...newProduct, stock: Number(e.target.value) })}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  borderRadius: '8px',\r\n                }\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"URL изображения\"\r\n              value={newProduct.imageUrl}\r\n              onChange={(e) => setNewProduct({ ...newProduct, imageUrl: e.target.value })}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  borderRadius: '8px',\r\n                }\r\n              }}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{ \r\n          p: 3,\r\n          borderTop: `1px solid ${theme.palette.divider}`,\r\n        }}>\r\n          <Button \r\n            onClick={() => setOpenProductDialog(false)}\r\n            sx={{\r\n              color: theme.palette.text.secondary,\r\n              '&:hover': {\r\n                backgroundColor: alpha(theme.palette.grey[500], 0.1),\r\n              }\r\n            }}\r\n          >\r\n            Отмена\r\n          </Button>\r\n          <Button \r\n            onClick={handleAddProduct} \r\n            variant=\"contained\"\r\n            sx={{\r\n              backgroundColor: theme.palette.primary.main,\r\n              '&:hover': {\r\n                backgroundColor: theme.palette.primary.dark,\r\n              },\r\n              borderRadius: '8px',\r\n              textTransform: 'none',\r\n              padding: '8px 24px',\r\n            }}\r\n          >\r\n            Добавить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AdminPage; "],"names":["API_BASE_URL","API_ENDPOINTS","auth","login","register","refresh","logout","products","list","detail","id","create","update","delete","support","profile","get","changePassword","admin","users","block","unblock","TabPanel","props","children","value","index","other","_jsx","role","hidden","Box","sx","p","PRODUCTS_STORAGE_KEY","DEFAULT_PRODUCTS","name","description","price","category","stock","imageUrl","sizes","createdAt","Date","toISOString","AdminPage","theme","useTheme","enqueueSnackbar","useSnackbar","tabValue","setTabValue","useState","setUsers","setProducts","tickets","setTickets","loading","setLoading","error","setError","openProductDialog","setOpenProductDialog","newProduct","setNewProduct","selectedUser","setSelectedUser","roleDialogOpen","setRoleDialogOpen","useEffect","async","savedProducts","localStorage","getItem","parsedProducts","JSON","parse","err","console","setItem","stringify","usersRes","ticketsRes","Promise","all","api","log","data","_err$response","_err$response$data","errorMessage","response","message","variant","fetchData","length","display","justifyContent","alignItems","minHeight","CircularProgress","Container","maxWidth","mt","Alert","severity","_jsxs","height","Paper","elevation","mb","borderRadius","backgroundColor","alpha","palette","background","paper","backdropFilter","boxShadow","primary","main","Typography","component","gutterBottom","fontWeight","color","position","content","bottom","left","width","borderBottom","borderColor","Tabs","onChange","handleTabChange","event","newValue","Tab","icon","PeopleIcon","label","textTransform","fontSize","ShoppingCartIcon","SupportIcon","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","sort","a","b","map","user","email","phone","Select","e","userId","newRole","post","handleRoleChange","target","size","MenuItem","Chip","isBlocked","IconButton","onClick","handleUnblockUser","LockOpenIcon","reason","handleBlockUser","BlockIcon","Button","startIcon","AddIcon","dark","padding","Grid","container","spacing","product","item","xs","sm","md","Card","flexDirection","transition","transform","overflow","paddingTop","grey","src","alt","top","objectFit","CardContent","flexGrow","text","toLocaleString","gap","CheckCircleIcon","flexWrap","secondary","handleDeleteProduct","productId","prev","filter","DeleteIcon","ticket","title","status","ticketId","newStatus","_err$response$data2","_err$response$data3","healthCheck","Error","requestData","patch","timeout","headers","autoHideDuration","request","anchorOrigin","vertical","horizontal","handleTicketStatusChange","toLocaleDateString","handleDeleteTicket","Dialog","open","onClose","fullWidth","PaperProps","DialogTitle","divider","pb","DialogContent","pt","TextField","multiline","rows","type","Number","InputProps","endAdornment","select","_newProduct$sizes","_newProduct$sizes2","includes","cursor","DialogActions","borderTop","handleAddProduct","crypto","randomUUID"],"sourceRoot":""}