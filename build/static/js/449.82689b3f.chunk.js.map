{"version":3,"file":"static/js/449.82689b3f.chunk.js","mappings":"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","sources":["pages/RegisterPage.tsx","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  Paper,\r\n  Link,\r\n  useTheme,\r\n  alpha\r\n} from '@mui/material';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst RegisterPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { register } = useAuth();\r\n  const theme = useTheme();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (password !== confirmPassword) {\r\n      setError('Пароли не совпадают');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await register(name, email, password);\r\n      navigate('/');\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Ошибка при регистрации');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box\r\n        sx={{\r\n          minHeight: 'calc(100vh - 64px)',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          py: 4\r\n        }}\r\n      >\r\n        <Paper\r\n          elevation={3}\r\n          sx={{\r\n            p: 4,\r\n            width: '100%',\r\n            backgroundColor: alpha(theme.palette.primary.main, 0.02)\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"h4\"\r\n            component=\"h1\"\r\n            gutterBottom\r\n            align=\"center\"\r\n            sx={{\r\n              color: theme.palette.primary.main,\r\n              fontWeight: 600,\r\n              mb: 4\r\n            }}\r\n          >\r\n            Регистрация\r\n          </Typography>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Имя\"\r\n              variant=\"outlined\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              margin=\"normal\"\r\n              required\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  '&:hover fieldset': {\r\n                    borderColor: theme.palette.primary.main\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              variant=\"outlined\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              margin=\"normal\"\r\n              required\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  '&:hover fieldset': {\r\n                    borderColor: theme.palette.primary.main\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Пароль\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              margin=\"normal\"\r\n              required\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  '&:hover fieldset': {\r\n                    borderColor: theme.palette.primary.main\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Подтвердите пароль\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              margin=\"normal\"\r\n              required\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  '&:hover fieldset': {\r\n                    borderColor: theme.palette.primary.main\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n\r\n            {error && (\r\n              <Typography color=\"error\" sx={{ mt: 2 }}>\r\n                {error}\r\n              </Typography>\r\n            )}\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              sx={{\r\n                mt: 3,\r\n                mb: 2,\r\n                backgroundColor: theme.palette.primary.main,\r\n                '&:hover': {\r\n                  backgroundColor: alpha(theme.palette.primary.main, 0.8)\r\n                }\r\n              }}\r\n            >\r\n              Зарегистрироваться\r\n            </Button>\r\n\r\n            <Box sx={{ textAlign: 'center' }}>\r\n              <Link\r\n                component=\"button\"\r\n                variant=\"body2\"\r\n                onClick={() => navigate('/login')}\r\n                sx={{\r\n                  color: theme.palette.primary.main,\r\n                  textDecoration: 'none',\r\n                  '&:hover': {\r\n                    textDecoration: 'underline'\r\n                  }\r\n                }}\r\n              >\r\n                Уже есть аккаунт? Войти\r\n              </Link>\r\n            </Box>\r\n          </form>\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterPage; ","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { getPath } from '@mui/system';\nimport { alpha } from '@mui/system/colorManipulator';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["RegisterPage","navigate","useNavigate","register","useAuth","theme","useTheme","name","setName","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","_jsx","Container","maxWidth","children","Box","sx","minHeight","display","alignItems","py","_jsxs","Paper","elevation","p","width","backgroundColor","alpha","palette","primary","main","Typography","variant","component","gutterBottom","align","color","fontWeight","mb","onSubmit","async","e","preventDefault","err","Error","message","TextField","fullWidth","label","value","onChange","target","margin","required","borderColor","type","mt","Button","size","textAlign","Link","onClick","textDecoration","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","textPrimary","secondary","textSecondary","_ref","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","_excluded","LinkRoot","styled","overridesResolver","props","styles","root","capitalize","underline","button","_extends","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","outline","border","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","React","inProps","ref","useDefaultProps","className","onBlur","onFocus","TypographyClasses","other","_objectWithoutPropertiesLoose","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","clsx","event","current","Object","keys","includes","Array","isArray"],"sourceRoot":""}